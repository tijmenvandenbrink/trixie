# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-29 20:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0002_auto_20151229_2045'),
        ('taggit', '0002_auto_20150616_2121'),
        ('organizations', '0001_initial'),
        ('components', '0002_auto_20151229_2045'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('frequency', models.PositiveIntegerField(blank=True)),
                ('service_window', models.CharField(choices=[(b'oh', b'Office Hours'), (b'ooh', b'Out of Office Hours'), (b'24x7', b'24x7')], max_length=200)),
                ('component', models.ManyToManyField(blank=True, related_name='services', to='components.Component')),
                ('device', models.ManyToManyField(blank=True, related_name='services', to='devices.Device')),
                ('organization', models.ManyToManyField(related_name='services', to='organizations.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('conversion', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Service statuses',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ServiceType'),
        ),
        migrations.AddField(
            model_name='service',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ServiceStatus'),
        ),
        migrations.AddField(
            model_name='service',
            name='sub_services',
            field=models.ManyToManyField(blank=True, related_name='parent_service', to='services.Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
